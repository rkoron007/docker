defaults: &defaults
  # TODO: Replace working directory with current repo name
  working_directory: ~/docker-course
  docker:
    - image: circleci/node:10

version: 2
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - run:
          name: Create Build profile
          command: |
            if [[ "${CIRCLE_BRANCH}" == "master" ]]
            then
            echo 'export STAGE=production' >> $BASH_ENV
            else
            echo 'export STAGE=staging' >> $BASH_ENV
            fi
            # TODO: Replace CURRENT_REPO value with the current repo name
            echo 'export CURRENT_REPO=docker-course' >> $BASH_ENV

      - run:
          name: Add NPM Token to npmrc
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc

      - run:
          name: Install course-builder
          command: npm install @appacademy/course-builder@${COURSE_BUILDER_VERSION}

      - run:
          name: Create build folder
          command: |
            mkdir .build

      - run:
          name: Build
          command: npx aa-build

      # Optionally, show build files
      - run:
          name: Show built files
          command: cat .build/built_task_groups.json

      - persist_to_workspace:
          root: ./
          paths:
            - .build
            - node_modules

  validate-populate:
    <<: *defaults
    steps:
      - checkout

      - attach_workspace:
          at: ./

      - run:
          name: Validate
          command: npx aa-validate

      - run:
          name: Populate
          command: npx aa-populate

      # Optionally, show populated files
      - run:
          name: Show populated files
          command: cat .build/populated_task_groups.json

      - run:
          name: Parse
          command: npx aa-parse

      # Optionally, show parsed files
      - run:
          name: Show parsed files
          command: cat .build/parsed_task_groups.json

      - run:
          name: Validate Templates
          command: npx aa-validate-templates

      - persist_to_workspace:
          root: ./
          paths:
            - .build

      - store_artifacts:
          path: .build/errors.json

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ./

      - run:
          name: Deploy
          command: npx aa-deploy

      - run:
          name: Store Deploy
          command: npx aa-store-deploy

      - run:
          name: Analytics
          command: npx aa-analytics

      - store_artifacts:
          path: .build/errors.json

workflows:
  version: 2
  build_validate_deploy:
    jobs:
      - build
      - validate-populate:
          requires:
            - build
      - deploy:
          filters:
            branches:
              only:
                - master
                - staging
          requires:
            - build
            - validate-populate